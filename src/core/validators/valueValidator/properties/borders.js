/**
 * Border Properties Validation Rules
 * CSS properties related to borders, outlines, and border-related styling
 */

import { PROCESSING_CONSTANTS } from "../../../utils/index.js";
import { BORDER_STYLE_KEYWORDS } from "../../constants/cssStyles.js";
import {
  CSS_GLOBAL_KEYWORDS,
  KEYWORD_NONE,
} from "../../constants/cssKeywords.js";

/**
 * Border properties validation rules
 * 54 properties total
 */
export const BORDER_PROPERTIES = {
  // Basic borders
  border: {
    type: "special-shorthand",
    allowKeywords: BORDER_STYLE_KEYWORDS,
    allowMultiple: true, // Allow space-separated values like "2px solid red"
    allowColors: true,
    allowCommaLists: true, // Allow comma-separated values that become space-separated
  },
  "border-block": {
    type: "special-shorthand",
    allowKeywords: [
      "none",
      "solid",
      "dotted",
      "dashed",
      "double",
      "groove",
      "ridge",
      "inset",
      "outset",
      "hidden",
      "inherit",
      "initial",
      "unset",
    ],
    allowMultiple: true, // Allow space-separated values like "2px solid red"
    allowColors: true,
    allowCommaLists: true, // Allow comma-separated values that become space-separated
  },
  "border-block-color": {
    type: "color",
    allowKeywords: ["currentcolor", "transparent"],
  },
  "border-block-end-color": {
    type: "color",
    allowKeywords: ["currentcolor", "transparent"],
  },
  "border-block-end-style": {
    type: "keyword",
    values: [
      "none",
      "hidden",
      "dotted",
      "dashed",
      "solid",
      "double",
      "groove",
      "ridge",
      "inset",
      "outset",
    ],
  },
  "border-block-end-width": {
    type: "length",
    min: PROCESSING_CONSTANTS.MIN_ZERO,
    allowNegative: false,
    allowKeywords: ["thin", "medium", "thick"],
  },
  "border-block-start-color": {
    type: "color",
    allowKeywords: ["currentcolor", "transparent"],
  },
  "border-block-start-style": {
    type: "keyword",
    values: [
      "none",
      "hidden",
      "dotted",
      "dashed",
      "solid",
      "double",
      "groove",
      "ridge",
      "inset",
      "outset",
    ],
  },
  "border-block-start-width": {
    type: "length",
    min: PROCESSING_CONSTANTS.MIN_ZERO,
    allowNegative: false,
    allowKeywords: ["thin", "medium", "thick"],
  },
  "border-block-style": {
    type: "keyword",
    values: [
      "none",
      "hidden",
      "dotted",
      "dashed",
      "solid",
      "double",
      "groove",
      "ridge",
      "inset",
      "outset",
    ],
  },
  "border-block-width": {
    type: "length",
    min: PROCESSING_CONSTANTS.MIN_ZERO,
    allowNegative: false,
    allowKeywords: ["thin", "medium", "thick"],
  },
  "border-bottom": {
    type: "special-shorthand",
    allowKeywords: [
      "none",
      "solid",
      "dotted",
      "dashed",
      "double",
      "groove",
      "ridge",
      "inset",
      "outset",
      "hidden",
      "inherit",
      "initial",
      "unset",
    ],
    allowMultiple: true, // Allow space-separated values like "2px solid red"
    allowColors: true,
    allowCommaLists: true, // Allow comma-separated values that become space-separated
  },
  "border-bottom-color": {
    type: "color",
    allowKeywords: ["currentcolor", "transparent"],
  },
  "border-bottom-left-radius": {
    type: "length",
    min: PROCESSING_CONSTANTS.MIN_ZERO,
    allowNegative: false,
    allowPercentage: true,
    allowCalc: true,
    allowFunctions: true,
    allowKeywords: CSS_GLOBAL_KEYWORDS,
  },
  "border-bottom-right-radius": {
    type: "length",
    min: PROCESSING_CONSTANTS.MIN_ZERO,
    allowNegative: false,
    allowPercentage: true,
    allowCalc: true,
    allowFunctions: true,
    allowKeywords: CSS_GLOBAL_KEYWORDS,
  },
  "border-bottom-style": {
    type: "keyword",
    values: [
      "none",
      "hidden",
      "dotted",
      "dashed",
      "solid",
      "double",
      "groove",
      "ridge",
      "inset",
      "outset",
    ],
  },
  "border-bottom-width": {
    type: "length",
    min: PROCESSING_CONSTANTS.MIN_ZERO,
    allowNegative: false,
    allowKeywords: ["thin", "medium", "thick"],
  },
  "border-collapse": {
    type: "keyword",
    values: ["collapse", "separate"],
  },
  "border-color": {
    type: "color",
    allowKeywords: ["currentcolor", "transparent"],
  },
  "border-end-end-radius": {
    type: "length",
    min: PROCESSING_CONSTANTS.MIN_ZERO,
    allowNegative: false,
    allowPercentage: true,
    allowCalc: true,
    allowFunctions: true,
  },
  "border-end-start-radius": {
    type: "length",
    min: PROCESSING_CONSTANTS.MIN_ZERO,
    allowNegative: false,
    allowPercentage: true,
    allowCalc: true,
    allowFunctions: true,
  },
  "border-image": {
    type: "complex",
    allowMultiple: true, // Allow complex border-image shorthand
    allowKeywords: [...KEYWORD_NONE, ...CSS_GLOBAL_KEYWORDS],
  },
  "border-image-outset": {
    type: "length-or-number",
    min: PROCESSING_CONSTANTS.MIN_ZERO,
    allowNegative: false,
  },
  "border-image-repeat": {
    type: "keyword",
    values: ["stretch", "repeat", "round", "space"],
  },
  "border-image-slice": {
    type: "number",
    min: PROCESSING_CONSTANTS.MIN_ZERO,
    allowNegative: false,
    allowKeywords: ["fill"], // Add "fill" keyword support
  },
  "border-image-source": {
    type: "color-or-complex",
    allowKeywords: [...KEYWORD_NONE, ...CSS_GLOBAL_KEYWORDS],
  },
  "border-image-width": {
    type: "length-or-number",
    min: PROCESSING_CONSTANTS.MIN_ZERO,
    allowNegative: false,
    allowKeywords: ["auto"], // Add "auto" keyword support
  },
  "border-inline": {
    type: "special-shorthand",
    allowKeywords: [
      "none",
      "solid",
      "dotted",
      "dashed",
      "double",
      "groove",
      "ridge",
      "inset",
      "outset",
      "hidden",
      "inherit",
      "initial",
      "unset",
    ],
    allowMultiple: true, // Allow space-separated values like "2px solid red"
    allowColors: true,
    allowCommaLists: true, // Allow comma-separated values that become space-separated
  },
  "border-inline-color": {
    type: "color",
    allowKeywords: [
      "currentcolor",
      "transparent",
      "inherit",
      "initial",
      "revert",
      "revert-layer",
      "unset",
    ],
  },
  "border-inline-end-color": {
    type: "color",
    allowKeywords: [
      "currentcolor",
      "transparent",
      "inherit",
      "initial",
      "revert",
      "revert-layer",
      "unset",
    ],
  },
  "border-inline-end-style": {
    type: "keyword",
    values: [
      "none",
      "hidden",
      "dotted",
      "dashed",
      "solid",
      "double",
      "groove",
      "ridge",
      "inset",
      "outset",
    ],
  },
  "border-inline-end-width": {
    type: "length",
    min: PROCESSING_CONSTANTS.MIN_ZERO,
    allowNegative: false,
    allowKeywords: ["thin", "medium", "thick"],
  },
  "border-inline-start-color": {
    type: "color",
    allowKeywords: [
      "currentcolor",
      "transparent",
      "inherit",
      "initial",
      "revert",
      "revert-layer",
      "unset",
    ],
  },
  "border-inline-start-style": {
    type: "keyword",
    values: [
      "none",
      "hidden",
      "dotted",
      "dashed",
      "solid",
      "double",
      "groove",
      "ridge",
      "inset",
      "outset",
    ],
  },
  "border-inline-start-width": {
    type: "length",
    min: PROCESSING_CONSTANTS.MIN_ZERO,
    allowNegative: false,
    allowKeywords: ["thin", "medium", "thick"],
  },
  "border-inline-style": {
    type: "keyword",
    values: [
      "none",
      "hidden",
      "dotted",
      "dashed",
      "solid",
      "double",
      "groove",
      "ridge",
      "inset",
      "outset",
    ],
  },
  "border-inline-width": {
    type: "length",
    min: PROCESSING_CONSTANTS.MIN_ZERO,
    allowNegative: false,
    allowKeywords: ["thin", "medium", "thick"],
  },
  "border-left": {
    type: "special-shorthand",
    allowKeywords: [
      "none",
      "solid",
      "dotted",
      "dashed",
      "double",
      "groove",
      "ridge",
      "inset",
      "outset",
      "hidden",
      "inherit",
      "initial",
      "unset",
    ],
    allowMultiple: true, // Allow space-separated values like "2px solid red"
    allowColors: true,
    allowCommaLists: true, // Allow comma-separated values that become space-separated
  },
  "border-left-color": {
    type: "color",
    allowKeywords: ["currentcolor", "transparent"],
  },
  "border-left-style": {
    type: "keyword",
    values: [
      "none",
      "hidden",
      "dotted",
      "dashed",
      "solid",
      "double",
      "groove",
      "ridge",
      "inset",
      "outset",
    ],
  },
  "border-left-width": {
    type: "length",
    min: PROCESSING_CONSTANTS.MIN_ZERO,
    allowNegative: false,
    allowKeywords: ["thin", "medium", "thick"],
  },
  "border-radius": {
    type: "complex",
    allowKeywords: CSS_GLOBAL_KEYWORDS,
    allowMultiple: true, // Allow multiple values and slash separator
    allowSlash: true, // Special flag for horizontal/vertical radii syntax
    min: PROCESSING_CONSTANTS.MIN_ZERO,
    allowNegative: false,
    allowPercentage: true,
    allowCalc: true,
    allowFunctions: true,
  },
  "border-right": {
    type: "special-shorthand",
    allowKeywords: [
      "none",
      "solid",
      "dotted",
      "dashed",
      "double",
      "groove",
      "ridge",
      "inset",
      "outset",
      "hidden",
      "inherit",
      "initial",
      "unset",
    ],
    allowMultiple: true, // Allow space-separated values like "2px solid red"
    allowColors: true,
    allowCommaLists: true, // Allow comma-separated values that become space-separated
  },
  "border-right-color": {
    type: "color",
    allowKeywords: ["currentcolor", "transparent"],
  },
  "border-right-style": {
    type: "keyword",
    values: [
      "none",
      "hidden",
      "dotted",
      "dashed",
      "solid",
      "double",
      "groove",
      "ridge",
      "inset",
      "outset",
    ],
  },
  "border-right-width": {
    type: "length",
    min: PROCESSING_CONSTANTS.MIN_ZERO,
    allowNegative: false,
    allowKeywords: ["thin", "medium", "thick"],
  },
  "border-spacing": {
    type: "length",
    min: PROCESSING_CONSTANTS.MIN_ZERO,
    allowNegative: false,
  },
  "border-start-end-radius": {
    type: "length",
    min: PROCESSING_CONSTANTS.MIN_ZERO,
    allowNegative: false,
    allowPercentage: true,
    allowCalc: true,
    allowFunctions: true,
    allowKeywords: CSS_GLOBAL_KEYWORDS,
  },
  "border-start-start-radius": {
    type: "length",
    min: PROCESSING_CONSTANTS.MIN_ZERO,
    allowNegative: false,
    allowPercentage: true,
    allowCalc: true,
    allowFunctions: true,
    allowKeywords: CSS_GLOBAL_KEYWORDS,
  },
  "border-style": {
    type: "keyword",
    values: [
      "none",
      "hidden",
      "dotted",
      "dashed",
      "solid",
      "double",
      "groove",
      "ridge",
      "inset",
      "outset",
    ],
  },
  "border-top": {
    type: "special-shorthand",
    allowKeywords: [
      "none",
      "solid",
      "dotted",
      "dashed",
      "double",
      "groove",
      "ridge",
      "inset",
      "outset",
      "hidden",
      "inherit",
      "initial",
      "unset",
    ],
    allowMultiple: true, // Allow space-separated values like "2px solid red"
    allowColors: true,
    allowCommaLists: true, // Allow comma-separated values that become space-separated
  },
  "border-top-color": {
    type: "color",
    allowKeywords: ["currentcolor", "transparent"],
  },
  "border-top-left-radius": {
    type: "length",
    min: PROCESSING_CONSTANTS.MIN_ZERO,
    allowNegative: false,
    allowPercentage: true,
    allowCalc: true,
    allowFunctions: true,
    allowKeywords: CSS_GLOBAL_KEYWORDS,
  },
  "border-top-right-radius": {
    type: "length",
    min: PROCESSING_CONSTANTS.MIN_ZERO,
    allowNegative: false,
    allowPercentage: true,
    allowCalc: true,
    allowFunctions: true,
    allowKeywords: CSS_GLOBAL_KEYWORDS,
  },
  "border-top-style": {
    type: "keyword",
    values: [
      "none",
      "hidden",
      "dotted",
      "dashed",
      "solid",
      "double",
      "groove",
      "ridge",
      "inset",
      "outset",
    ],
  },
  "border-top-width": {
    type: "length",
    min: PROCESSING_CONSTANTS.MIN_ZERO,
    allowNegative: false,
    allowKeywords: ["thin", "medium", "thick"],
  },
  "border-width": {
    type: "length",
    min: PROCESSING_CONSTANTS.MIN_ZERO,
    allowNegative: false,
    allowKeywords: ["thin", "medium", "thick"],
  },

  // Outline properties (part of BORDERS category)
  outline: {
    type: "special-shorthand",
    allowKeywords: [
      "currentcolor",
      "transparent",
      "invert",
      "none",
      "auto",
      "dotted",
      "dashed",
      "solid",
      "double",
      "groove",
      "ridge",
      "inset",
      "outset",
      "thin",
      "medium",
      "thick",
      "initial",
      "inherit",
      "revert",
      "revert-layer",
      "unset",
    ],
    allowMultiple: true,
    allowColors: true,
  },
  "outline-color": {
    type: "color",
    allowKeywords: [
      "currentcolor",
      "transparent",
      "invert",
      "inherit",
      "initial",
      "revert",
      "revert-layer",
      "unset",
    ],
  },
  "outline-offset": {
    type: "length",
    allowNegative: true,
    allowCalc: true,
    allowKeywords: CSS_GLOBAL_KEYWORDS,
  },
  "outline-style": {
    type: "keyword",
    values: [
      "none",
      "auto",
      "dotted",
      "dashed",
      "solid",
      "double",
      "groove",
      "ridge",
      "inset",
      "outset",
      "inherit",
      "initial",
      "revert",
      "revert-layer",
      "unset",
    ],
  },
  "outline-width": {
    type: "length",
    min: PROCESSING_CONSTANTS.MIN_ZERO,
    allowNegative: false,
    allowKeywords: [
      "thin",
      "medium",
      "thick",
      "initial",
      "inherit",
      "revert",
      "revert-layer",
      "unset",
    ],
  },
};
